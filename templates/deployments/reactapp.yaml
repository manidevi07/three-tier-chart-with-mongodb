apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "reactapp.name" . }}
  labels:
    app: {{ template "reactapp.name" . }}
    chart: {{ template "nodeapp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "reactapp.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "reactapp.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.reactapp.repository }}:{{ .Values.image.reactapp.tag }}
          env:
          - name: NODE_APP_URL
            value: {{ printf "http://%s" .Values.service.nodeapp.name }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.reactapp.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.reactapp.internalPort }}
            initialDelaySeconds: 15
            periodSeconds: 20  
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}